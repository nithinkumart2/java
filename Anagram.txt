Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false
 

Constraints:

1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.
 


class Solution {
    public boolean isAnagram(String s, String t) {
        
        HashMap<Character, Integer> sHash = new HashMap();
		HashMap<Character, Integer> tHash = new HashMap();

		for (int i = 0; i < s.length() - 1; i++) {
			if (sHash.containsKey(s.charAt(i))) {
				int num = sHash.get(s.charAt(i));
				num += 1;
				sHash.put(s.charAt(i), num);
			} else {
				sHash.put(s.charAt(i), 1);
			}

		}

		for (int i = 0; i < t.length() - 1; i++) {
			if (tHash.containsKey(s.charAt(i))) {
				int num = tHash.get(s.charAt(i));
				num += 1;
				tHash.put(s.charAt(i), num);
			} else {
				tHash.put(s.charAt(i), 1);
			}

		}

		if (sHash.equals(tHash))
			return true;
		else
			return false;
    }
}