Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9



package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;

class test {

	public static void main(String[] args) {

		int[] nums = new int[] { 9,1,4,7,3,-1,0,5,8,-1,6 };

		System.out.println(longestConsecutive(nums));
	}

	public static int longestConsecutive(int[] nums) {

		HashSet<Integer> set = new HashSet();
		for (int i : nums) {
			set.add(i);
		}
		System.out.println(set);
		int len = 0, tempLen = 1;

		for (Integer i : set) {
			if (set.contains(i - 1)) {
				continue;
			} else {
				int j = i + 1;
				tempLen=1;
				while (set.contains(j)) {
					tempLen += 1;
					j += 1;
				}
				if (len < tempLen) {
					len = tempLen;
				}

			}
		}
		return len;

	}

}